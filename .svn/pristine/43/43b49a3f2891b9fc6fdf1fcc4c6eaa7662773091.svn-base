/**
 * Created by GLGGAG on 2017/3/16.
 * 消息发送服务
 */

var api=require('./timServerInit');
var log4js = require("../../config/log.js");
var logger = log4js.logger;
var addFriend=require('./timAddFriendsServer');
var initAddFriBody=require('../../config/timAddFriConfig');

/**
 * 当发送失败时重试三次
 * @type {number}
 */
var sendFailTryAgainCount=0;
var timMesSend=function () {
}
timMesSend.prototype.beginSend = function (body) {
  var self=this;
  api.request("openim", "sendmsg", body, function (err, data) {
    if (err) {
      logger.info("timResponseMessageError:%s", err);
    }
    sendFailTryAgainCount++;
    logger.info("timResponseMessageSuccessStatus:%s,ErrorCode:%s,ErrorInfo:%s,count:%s", data.ActionStatus, data.ErrorCode, data.ErrorInfo,sendFailTryAgainCount);
    if (data.ActionStatus != "Ok" && data.ErrorInfo != 0 && sendFailTryAgainCount < 3) {
       self.beginSend(body);
    }
    /**
     * 发送消息失败，尝试添加好友后重新发送
     */
    if(sendFailTryAgainCount==3){
      var initAddFriBody=self.buildMesBody(body);
        new addFriend().send(initAddFriBody);
    }
  })
}
timMesSend.prototype.restoreCount = function () {
  sendFailTryAgainCount = 0;
}
/**
 * 从消息体内取出需要所需信息组装成添加好友初始消息体
 * @param body
 */
timMesSend.prototype.buildMesBody=function (body) {
  var from_Account = body.From_Account;
  var to_Account = body.To_Account;
  initAddFriBody.From_Account = from_Account;
  initAddFriBody.AddFriendItem.To_Account = to_Account;
  return initAddFriBody;
}

timMesSend.tryAgainAddFriendsAfterSendMesFail = function () {
}
timMesSend.prototype.send=function(body){
  /**
   * 每次调用钱前把共用变量重置为0，模块默认只加载一次
   */
  this.restoreCount();
  this.beginSend(body);
}
module.exports=timMesSend;




